{
    "version": "https://jsonfeed.org/version/1",
    "title": "Rec Arc • All posts by \"大数据框架\" category",
    "description": "",
    "home_page_url": "https://ruyiluo.github.io",
    "items": [
        {
            "id": "https://ruyiluo.github.io/2020/10/29/big-data/flink/Flink%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "url": "https://ruyiluo.github.io/2020/10/29/big-data/flink/Flink%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "title": "Flink基本概念",
            "date_published": "2020-10-29T11:03:11.884Z",
            "content_html": "<p>这是 Flink 学习的第一篇文章，这篇文章主要是了解 Flink 是什么，以及 Flink 中重要的基本概念，为后续 Flink 开发打下基础。</p>\n<!---more--->\n<h2 id=\"flink是什么\"><a class=\"markdownIt-Anchor\" href=\"#flink是什么\">#</a> Flink 是什么？</h2>\n<p>Apache Flink 是一个<mark>分布式大数据处理引擎</mark>，可对<mark>有限数据流和无限数据流</mark>进行<mark>有状态或无状态</mark>的计算，能够<mark>部署在各种集群环境</mark>，对<mark>各种规模大小的数据</mark>进行<mark>快速计算</mark>。</p>\n<p><mark>Flink 具备统一的框架处理有界和无界两种数据流的能力 (流批统一)。</mark></p>\n<p><strong>分布式大数据处理引擎还有哪些？与那些处理引擎相比较，Flink 有什么优势？</strong></p>\n<blockquote>\n<p>总结之后再写</p>\n</blockquote>\n<h2 id=\"flink中重要的几个基本概念\"><a class=\"markdownIt-Anchor\" href=\"#flink中重要的几个基本概念\">#</a> Flink 中重要的几个基本概念</h2>\n<p><strong>Stream:</strong> 流，主要分为有限数据流和无限数据流，两者的区别在于<mark>无限数据流的数据会随时间的推演而持续增加，计算持续进行且不存在结束的状态，而有限数据流数据大小固定，计算最终会完成并处于结束的状态。</mark></p>\n<p><strong>State:</strong> 状态是计算过程中的<mark>数据信息</mark>，在<mark>容错恢复和 Checkpoint</mark> 中有重要的作用，流计算在本质上是增量处理的过程，需要不断的查询保持数据的状态；另外，为了保证<mark> Exactly- once 语义</mark>，需要<mark>数据能够写入到状态中</mark>；而<mark>持久化存储</mark>，可以保证在整个分布式系统<mark>运行失败或者挂掉</mark>的情况下做到 Exactly- once，这是状态的另外一个价值。(<strong>总之就是说为了更好的处理流数据，需要给数据添加一个状态，方便识别该数据是否已经被处理过，以及当出现故障的时候还知道从那一时刻的数据重新开始计算</strong>)</p>\n<p>**Time: ** Flink 中关于时间的分类有：Event time、Ingestion time、Processing time，分别表示的是<mark>事件发生的时间，数据输入到 Flink 的时间</mark>，以及<mark>数据经过处理时的机器时间</mark>，Flink 的无限数据流是一个持续的过程，<mark>时间是我们判断业务状态是否滞后，数据处理是否及时的重要依据。</mark> <strong>由于时间这个概念在 Flink 中是非常重要的后面还会详细的说明这些时间的区别与联系。</strong></p>\n<p><strong>API:</strong>  API 通常分为三层，由上而下可分为<mark> SQL / Table API、DataStream API、ProcessFunction 三层</mark>，API 的表达能力及业务抽象能力都非常强大，但<strong>越接近 SQL 层，表达能力会逐步减弱，抽象能力会增强</strong>，反之，<strong>ProcessFunction 层 API 的表达能力非常强，可以进行多种灵活方便的操作，但抽象能力也相对越小</strong>。</p>\n<h3 id=\"time补充\"><a class=\"markdownIt-Anchor\" href=\"#time补充\">#</a> Time (补充)</h3>\n<p><img data-src=\"https://ververica.cn/wp-content/uploads/2019/07/20.-%E5%B9%BB%E7%81%AF%E7%89%8742.png\" alt=\"\"></p>\n<p><strong>Event Time:</strong></p>\n<blockquote>\n<p>事件发生的时间，一般是指数据本身携带的时间，这个时间是数据进入 Flink 之前就确定的，并且可以从每个事件中获取到事件的时间戳。(Event Time 中，时间取决于数据，与其他无关)。Event Time 程序必须指定如何生成 Event Time 水印，这表示 Event Time 进度的机制</p>\n</blockquote>\n<p><strong>Ingestion time:</strong></p>\n<blockquote>\n<p>事件进入 Flink 的时间，在源操作处，每个事件将源的当前时间作为时间戳，并且基于时间 (如窗口时间) 的操作会利用这个时间戳。Ingestion Time 在概念上位于 Event Time 和 Processing Time 之间</p>\n</blockquote>\n<p><strong>Processing time:</strong></p>\n<blockquote>\n<p>事件被处理时机器的系统时间，当流程序在 Processing Time 上运行时，所有基于时间的操作 (如时间窗口) 将会使用当时机器的系统时间。</p>\n</blockquote>\n<h2 id=\"flink的应用\"><a class=\"markdownIt-Anchor\" href=\"#flink的应用\">#</a> Flink 的应用</h2>\n<h1 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZXJ2ZXJpY2EuY24vZGV2ZWxvcGVycy9mbGluay1iYXNpYy10dXRvcmlhbC0xLWJhc2ljLWNvbmNlcHQv\">https://ververica.cn/developers/flink-basic-tutorial-1-basic-concept/</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy41NHRpYW56aGlzaGVuZy5jbi8yMDE4LzEyLzExL0ZsaW5rLXRpbWUv\">http://www.54tianzhisheng.cn/2018/12/11/Flink-time/</span></p>\n",
            "tags": [
                "flink"
            ]
        },
        {
            "id": "https://ruyiluo.github.io/2020/08/13/big-data/flink/Flink%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/",
            "url": "https://ruyiluo.github.io/2020/08/13/big-data/flink/Flink%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/",
            "title": "Flink学习规划",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<h1 id=\"flink学习规划\"><a class=\"markdownIt-Anchor\" href=\"#flink学习规划\">#</a> Flink 学习规划</h1>\n",
            "tags": [
                "flink"
            ]
        },
        {
            "id": "https://ruyiluo.github.io/2020/08/13/big-data/spark/Spark%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/",
            "url": "https://ruyiluo.github.io/2020/08/13/big-data/spark/Spark%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/",
            "title": "Spark学习规划",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<h1 id=\"spark学习规划\"><a class=\"markdownIt-Anchor\" href=\"#spark学习规划\">#</a> Spark 学习规划</h1>\n",
            "tags": [
                "spark"
            ]
        },
        {
            "id": "https://ruyiluo.github.io/2020/08/13/big-data/hadoop/Hadoop%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/",
            "url": "https://ruyiluo.github.io/2020/08/13/big-data/hadoop/Hadoop%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/",
            "title": "Hadoop学习规划",
            "date_published": "2020-08-13T12:45:48.000Z",
            "content_html": "<h1 id=\"hadoop学习规划\"><a class=\"markdownIt-Anchor\" href=\"#hadoop学习规划\">#</a> Hadoop 学习规划</h1>\n",
            "tags": [
                "hadoop"
            ]
        }
    ]
}